#0 -- calling perf via execve() with argv[0]==NULL causes segfault
	this technically isn't really a bug, just annoying

#1 -- f_header.attr_size ==0 causes a floating point exception
	patch sent
	fixed in 7622236ceb167aa3857395f9bdaf871442aa467e


#2 -- perf_header__read_build_ids gets filename size from the
	perf.data file and copies it to a 4096 buffer w/o
	checking it is too big.  Despite being a buffer smash,
	various Linux protections make this hard to exploit.

	not applied
	NEW.PATCHES1 (half)

#3 -- perf_header pmu parsing.  If a string is marked as size 0,
	malloc will happily allocate space but any string ops
	trying to operate on it will have problems with that.

	same issue: cmdline parsing

	[patch] perf report segfault with 0-sized strings

	not applied???
	NEW.PATCHES1 (other half)


#4 -- perf: perf report stuck in an infinite loop
	
	Fixed in 57fc032ad643ffd018d6

#5 -- carrying a patch (vince document better in future)
	same as 6ef81c55a2b6584cb642917f5fdf3632ef44b670
	unclear why.



Documentation bugs:
#1 -- wrong size memory
	Fixed in 2e9a06dda10aea81a17c623f08534dac6735434a


#2 -- Fix topology
	3143906c2770778d89b730e0342b745d1b4a8303
